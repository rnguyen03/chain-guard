import { Vulnerability, Application } from '../types';
import { AlertTriangle, ExternalLink, CheckCircle, Clock, Shield, ChevronRight } from 'lucide-react';
import { VulnerabilityWordBank } from './VulnerabilityWordBank';

interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[];
  applications: Application[];
  onUpdateStatus?: (id: string, status: Vulnerability['status']) => void;
}

export const VulnerabilityList: React.FC<VulnerabilityListProps> = ({
  vulnerabilities,
  applications,
  onUpdateStatus,
}) => {
  // Filter vulnerabilities to only show those affecting user's applications
  const userAppIds = new Set(applications.map(app => app.id));
  const filteredVulnerabilities = vulnerabilities.filter(vuln =>
    vuln.affectedApps.some(appId => userAppIds.has(appId))
  );

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'CRITICAL': return 'bg-red-500/20 text-red-300 border-red-500/30';
      case 'HIGH':     return 'bg-orange-500/20 text-orange-300 border-orange-500/30';
      case 'MEDIUM':   return 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30';
      case 'LOW':      return 'bg-blue-500/20 text-blue-300 border-blue-500/30';
      default:         return 'bg-slate-500/20 text-slate-300 border-slate-500/30';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'mitigated':   return <CheckCircle size={18} className="text-green-400" />;
      case 'acknowledged':return <Clock size={18} className="text-yellow-400" />;
      default:            return <AlertTriangle size={18} className="text-red-400" />;
    }
  };

  const getStatusStyles = (status: string) => {
    switch (status) {
      case 'mitigated':   return 'bg-green-500/10 border-green-500/30 text-green-400';
      case 'acknowledged':return 'bg-yellow-500/10 border-yellow-500/30 text-yellow-400';
      default:            return 'bg-red-500/10 border-red-500/30 text-red-400';
    }
  };

  const getAppName = (appId: string) => applications.find(a => a.id === appId)?.name || 'Unknown App';

  const formatDate = (dateString: string) =>
    new Date(dateString).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });

  return (
    <div className="min-h-screen px-4 py-8">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header */}
        <div className="mb-12">
          <h1 className="text-5xl font-bold text-white mb-3 tracking-tight">
            Vulnerabilities
          </h1>
          <p className="text-slate-400 font-light">
            Know the risks targeting you
          </p>
        </div>

        {/* Vulnerability Word Bank */}
        {filteredVulnerabilities.length > 0 && (
          <VulnerabilityWordBank 
            vulnerabilities={filteredVulnerabilities.map(v => ({ 
              description: v.description, 
              cveId: v.cveId 
            }))} 
          />
        )}

        {filteredVulnerabilities.length === 0 ? (
          <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-12 text-center">
            <div className="w-16 h-16 rounded-full bg-green-500/20 border border-green-500/30 flex items-center justify-center mx-auto mb-6">
              <Shield size={32} className="text-green-400" />
            </div>
            <h3 className="text-2xl font-semibold text-white mb-2">All Clear</h3>
            <p className="text-slate-400 font-light mb-1">No vulnerabilities detected in your applications</p>
            <p className="text-sm text-slate-500">Your security posture is strong</p>
          </div>
        ) : (
          <div className="space-y-4">
            {filteredVulnerabilities.map((vuln) => {
              const firstRef = vuln.references?.[0];
              return (
                <div 
                  key={vuln.id} 
                  className="group bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6 hover:bg-white/10 hover:border-white/20 transition-all duration-300"
                >
                  {/* Header Row */}
                  <div className="flex items-start justify-between mb-4 gap-4">
                    <div className="flex items-start gap-4 flex-1">
                      {/* Status Icon */}
                      <div className={`p-2.5 rounded-lg border ${getStatusStyles(vuln.status)} group-hover:scale-110 transition-transform duration-200`}>
                        {getStatusIcon(vuln.status)}
                      </div>
                      
                      {/* CVE Info */}
                      <div className="flex-1 min-w-0">
                        <h3 className="text-xl font-semibold text-white mb-2 tracking-tight">{vuln.cveId}</h3>
                        <p className="text-sm text-slate-400 font-light">
                          Published {formatDate(vuln.publishedDate)}
                        </p>
                      </div>
                    </div>

                    {/* Severity Badges */}
                    <div className="flex items-center gap-2 flex-shrink-0">
                      <span className={`px-4 py-2 rounded-lg text-sm font-semibold border ${getSeverityColor(vuln.severity)} hover:scale-105 transition-transform duration-200`}>
                        {vuln.severity}
                      </span>
                      {typeof vuln.cvssScore === 'number' && (
                        <span className="px-4 py-2 bg-white/5 border border-white/20 text-white rounded-lg text-sm font-semibold">
                          {vuln.cvssScore.toFixed(1)}
                        </span>
                      )}
                    </div>
                  </div>

                  {/* Description */}
                  <p className="text-slate-300 font-light mb-6 leading-relaxed">{vuln.description}</p>

                  {/* Footer Actions */}
                  <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 pt-4 border-t border-white/10">
                    {/* Affected Apps */}
                    <div className="flex items-center gap-3 flex-wrap">
                      <span className="text-sm font-medium text-slate-400">Affected:</span>
                      {vuln.affectedApps.map(appId => (
                        <span 
                          key={appId} 
                          className="px-3 py-1.5 bg-blue-500/10 border border-blue-500/30 text-blue-300 rounded-lg text-xs font-medium hover:bg-blue-500/20 transition-colors duration-200"
                        >
                          {getAppName(appId)}
                        </span>
                      ))}
                    </div>

                    {/* Actions */}
                    <div className="flex items-center gap-3 flex-wrap">
                      {firstRef && (
                        <a
                          href={firstRef}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="flex items-center gap-2 px-4 py-2 bg-white/5 border border-white/20 text-blue-300 rounded-lg text-sm font-medium hover:bg-white/10 hover:border-blue-400/50 transition-all duration-200"
                        >
                          Details <ExternalLink size={14} />
                        </a>
                      )}

                      {onUpdateStatus && (
                        <div className="flex items-center gap-2">
                          <button
                            className="px-3 py-2 bg-yellow-500/10 border border-yellow-500/30 text-yellow-300 rounded-lg text-xs font-medium hover:bg-yellow-500/20 hover:scale-105 transition-all duration-200"
                            onClick={() => onUpdateStatus(vuln.id, 'acknowledged')}
                            title="Mark as acknowledged"
                          >
                            Acknowledge
                          </button>
                          <button
                            className="px-3 py-2 bg-green-500/10 border border-green-500/30 text-green-300 rounded-lg text-xs font-medium hover:bg-green-500/20 hover:scale-105 transition-all duration-200"
                            onClick={() => onUpdateStatus(vuln.id, 'mitigated')}
                            title="Mark as mitigated"
                          >
                            Mitigate
                          </button>
                          <button
                            className="px-3 py-2 bg-red-500/10 border border-red-500/30 text-red-300 rounded-lg text-xs font-medium hover:bg-red-500/20 hover:scale-105 transition-all duration-200"
                            onClick={() => onUpdateStatus(vuln.id, 'active')}
                            title="Mark as active"
                          >
                            Active
                          </button>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        )}

        {/* Educational Info Card */}
        <div className="bg-blue-500/10 backdrop-blur-sm border border-blue-500/20 rounded-xl p-8">
          <h3 className="text-lg font-semibold text-white mb-4 tracking-tight flex items-center gap-2">
            <ChevronRight className="text-blue-400" size={20} />
            Understanding Vulnerability Severity
          </h3>
          <div className="grid md:grid-cols-2 gap-4 text-sm">
            <div className="space-y-2">
              <p className="text-slate-300 font-light">
                <span className="font-semibold text-red-300">Critical:</span> Immediate action required. Could lead to complete system compromise.
              </p>
              <p className="text-slate-300 font-light">
                <span className="font-semibold text-orange-300">High:</span> Significant risk. Patch within 30 days or implement mitigations.
              </p>
            </div>
            <div className="space-y-2">
              <p className="text-slate-300 font-light">
                <span className="font-semibold text-yellow-300">Medium:</span> Moderate risk. Schedule remediation within 90 days.
              </p>
              <p className="text-slate-300 font-light">
                <span className="font-semibold text-blue-300">Low:</span> Minimal risk. Address during regular maintenance cycles.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
